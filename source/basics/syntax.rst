*******************
Основной синтаксис
*******************

Типы данных
============

.. note::
    Статья в разработке...


Переменные в Python:
--------------------
Переменная в языке программирования это название для зарезервированного места в памяти компьютера,
предназначенное для хранения значений. Это означает, что когда вы создаете переменную, вы на самом деле резервируете
определенное место в памяти компьютера.
Основываясь на типе данных переменной, интерпретатор выделяет необходимое количество памяти и решает, что может
находится в зарезервированной области памяти.
Для понимания, можете думать о переменной как о коробке, в которую можно положить любую вещь, но только определенного
размера. Размер в данном примере будет типом переменной. Это не совсем верное определение, но оно дает общее представление о картине в целом.

**Присвоение значения переменной:**

В Python вам не нужно объявлять тип переменной вручную (как, например в С++). Объявление происходит автоматически
(это называется динамическая типизация), когда вы присваиваете значение переменной. Знак равенства ( = ) используется
для присвоения значения переменной.
Операнд по левую сторону от знака равно ( = ) это имя переменной, операнд по правую сторону - значение присвоенное
этой переменной.


**Таблица - Обзор встроенных типов объектов**

+------------------------------+---------+----------------------------------------------+
|Имя                           |Тип      |        Описание  и пример                    |
+==============================+=========+==============================================+
|Целые Числа                   |   int   | Целые положительные или отрицательные числа  |
|                              |         |      -35, 0, 24, 123467890033373747428       |
+------------------------------+---------+----------------------------------------------+
|Числа с плавающей точкой      |  float  | Дробные числа 3.14, 2.5, -2.33333, 0.12334   |
+------------------------------+---------+----------------------------------------------+
|Строки                        |  str    | Строки "asdf", "Hello world", "123456"       |
+------------------------------+---------+----------------------------------------------+
|Списки                        | list    | последовательность элементов                 |
|                              |         |   ["hello", -123, 0.34, "345"]               |
+------------------------------+---------+----------------------------------------------+
|Словарь                       | dict    |  Последовательность пар элементов содержаших |
|                              |         |  ключь-значение (key-value)                  |
|                              |         |   {"Language": "Python", "Version": "3.8"}   |
+------------------------------+---------+----------------------------------------------+
|Кортеж (Tuple)                |   tup   | Неизменяемая упорядоченная последовательность|
|                              |         | элементов ("hostname", 1234, -0.45, -32)     |
+------------------------------+---------+----------------------------------------------+
|Множество                     | set     | Изменяемая неупоряоченная последовательность |
|                              |         |  элементов {10, "Name", -30, 4.02, 100}      |
+------------------------------+---------+----------------------------------------------+
| Булевые значения             | bool    | Тип данных принимающий одно из двух значений |
|                              |         |      true - истина                           |
|                              |         |      false - ложь                            |
+------------------------------+---------+----------------------------------------------+


Числа
-----
Числа - Это не изменяемый тип данных.
Числа в Python бывают трёх типов: целые, с плавающей точкой и комплексные.
* Примером целого числа может служить 2.
* Примерами чисел с плавающей точкой (или «плавающих» для краткости) могут быть 3.23 и 52.3E-4. Обозначение E показывает степени числа 10. В данном случае 52.3E-4 означает 52.3 · 10−4.
* Примерыкомплексныхчисел:(-5+4j)и(2.3-4.6j)


.. note::
    Нет отдельного типа ‘long int’ (длинное целое). Целые числа по умолчанию могут быть произвольной длины.

Строки
------
Строки - это неизменяемая упорядоченная последовательность символов, заключенная в кавычки.
Строки применяются для записи текстовой информации (кажем, вашего имени) и произвольных совокупностей байтов
(наподобие содержимого файла изображения). Они являются первым примером того, что в Python называется
последовательностью — позиционно упорядоченной коллекцией других объектов. Для содержащихся элементов
последовательности поддерживают порядок слева направо: элементы сохраняются и извлекаются по своим относительным позициям.
Строго говоря, строки представляют собой последовательности односимвольных строк.

Строки можно суммировать. Тогда они объединяются в одну строку, такая операция называется "Конкатенацией строк":

.. code:: python

    firts_string = "asdfgh"
    second_string = "oiuytr"
    print(firts_string + second_string)


.. note::
    В Python 3 нет ASCII-строк, потому что Unicode является надмножеством (включает в себя) ASCII. Если необходимо получить
    строку строго в кодировке ASCII, используйте str.encode("ascii"). По умолчанию все строки в Unicode.

.. warning::
    Нельзя производить арифметтические операции над строкам и числами
    Например:
    "qwerty" + 3
    Это вызовет ошибку, Но строки можно перемножать
    "#" * 10
    выведет на экран строку
    ##########

Операции над последовательностями
---------------------------------
Как последовательности, строки поддерживают операции, которые предполагают наличие позиционного порядка среди
элементов. Например, если мы имеем четырех­ символьную строку, записанную в кавычках (обычно одинарных), то можем
проверить ее длину с помощью встроенной функции 1еп и извлечь ее компоненты посредством выражений индексации'.

.. literalinclude:: ../Examples/String.py
  :language: python

